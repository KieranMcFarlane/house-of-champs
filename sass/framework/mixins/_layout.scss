// Device breakpoint up. If the breakpoint is the smallest it will return without media query.

@mixin device-up($name, $breakpoints: $device-breakpoints) {
  $min: device-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

// Device breakpoint down. If the breakpoint is the largest it will return without media query.
@mixin device-down($name, $breakpoints: $device-breakpoints) {
  $max: device-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}

// Device breakpoint between
@mixin device-between($lower, $upper, $breakpoints: $device-breakpoints) {
  $min: device-min($lower, $breakpoints);
  $max: device-max($upper, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include device-up($lower, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include device-down($upper, $breakpoints) {
      @content;
    }
  }
}

// Device breakpoint only
@mixin device-only($name, $breakpoints: $grid-breakpoints) {
  $min: device-min($name, $breakpoints);
  $max: device-max($name, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($name, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($name, $breakpoints) {
      @content;
    }
  }
}

// Container widths.

@mixin build-container() {
  width: 100%;
  padding-right: ($column-gap / 2);
  padding-left: ($column-gap / 2);
  margin-right: auto;
  margin-left: auto;
}

@mixin build-container-max-widths($widths: $device-widths, $breakpoints: $device-breakpoints) {
  @each $breakpoint, $width in $widths {
    @include device-up($breakpoint, $breakpoints) {
      max-width: $width;
    }
  }
}

// Build Columns

@mixin build-columns-wrap() {
  display: flex;
  flex-wrap: wrap;
  margin-right: ($column-gap / -2);
  margin-left: ($column-gap / -2);

  &.--no-gap {
    margin-right: 0;
    margin-left: 0;
  }
  &.--cntr {
    justify-content: center;
  }
  &.--jstfy-cntnt-btwn {
    justify-content: space-between;
  }
}